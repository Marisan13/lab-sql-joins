# Challenge - Joining on multiple tables 
# List the number of films per category.
select joined_films_category.name as category, count(*) as number_of_films 
from (select film.title, joined_category.name
	  from film
	  inner join (
				  select film_category.film_id, film_category.category_id, category.name
				  from film_category 
				  inner join category
				  on film_category.category_id = category.category_id) as joined_category
	  on film.film_id = joined_category.film_id) as joined_films_category
group by joined_films_category.name;


# Retrieve the store ID, city, and country for each store.
select store_id, city, country
from country
inner join (
			select store_id, city, country_id
			from city
			inner join (
						select store_id, city_id
						from store
						inner join address
						on store.address_id = address.address_id) as store_address
			on city.city_id = store_address.city_id) as city_store_address
on country.country_id = city_store_address.country_id;


# Calculate the total revenue generated by each store in dollars.
select address_id as store, round(sum(amount)) as revenue_usd
from (
	select address_id, amount
	from store
	inner join (
				select payment_id, amount, store_id
				from payment
				inner join customer
				on payment.customer_id = customer.customer_id) as pay_customer
	on store.store_id = pay_customer.store_id) as store_pay_customer
group by address_id;
select * from payment;


# Determine the average running time of films for each category.
select name as category, round(avg(length))
from (
		select length, name
		from film
		join (
			  select name, film_id
			  from  category
			  join film_category
			  on category.category_id = film_category.category_id) as x
		on film.film_id = x.film_id) as y
group by name;